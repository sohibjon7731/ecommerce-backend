definitions:
  dto.Error:
    properties:
      message:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.LoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterDTO:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.Success:
    properties:
      access_token:
        example: string
        type: string
      refresh_token:
        type: string
    type: object
  dto.SuccessResponse:
    properties:
      success:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for Swagger integration.
  title: Swagger Example API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: This endpoint allows a new user to login with an email, password.
      parameters:
      - description: Login User
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Login user
      tags:
      - Accounts
  /auth/register:
    post:
      consumes:
      - application/json
      description: This endpoint allows a new user to register with an email, password,
        and password confirmation.
      parameters:
      - description: Register User
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.Error'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Register a new user
      tags:
      - Accounts
  /products/all:
    get:
      consumes:
      - application/json
      description: Get All Products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get All products
      tags:
      - Products
  /products/create:
    post:
      consumes:
      - multipart/form-data
      description: Adds a new product with an image to the system
      parameters:
      - description: Product title
        in: formData
        name: title
        required: true
        type: string
      - description: Product description
        in: formData
        name: description
        required: true
        type: string
      - description: Product price
        in: formData
        name: price
        required: true
        type: number
      - description: Product image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new product
      tags:
      - Products
  /products/delete/{id}:
    delete:
      consumes:
      - application/json
      description: delete a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: delete a product
      tags:
      - Products
  /products/update/{id}:
    patch:
      consumes:
      - multipart/form-data
      description: Updates an existing product with a new image (optional)
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product title
        in: formData
        name: title
        type: string
      - description: Product description
        in: formData
        name: description
        type: string
      - description: Product price
        in: formData
        name: price
        type: number
      - description: New product image (optional)
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a product
      tags:
      - Products
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
